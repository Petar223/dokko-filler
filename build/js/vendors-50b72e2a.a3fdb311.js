"use strict";(self.webpackChunkdokko_filler=self.webpackChunkdokko_filler||[]).push([[8623],{13426:(e,t,i)=>{i.d(t,{Lk:()=>w});var s=i(10612),n=i(84210),a=i(57675),o=i(34395);const r={identityId:"identityId"},d=new n.C("DefaultIdentityIdStore");const h=(e,t)=>(0,o.Qm)(r)(`com.amplify.${e}`,t);var c=i(26141),g=i(35781),u=i(36118),l=i(73917),y=i(73463);function I(e){const t=(0,a.Cq)(e).payload.iss,i={};if(!t)throw new g.l({name:"InvalidIdTokenException",message:"Invalid Idtoken."});return i[t.replace(/(^\w+:|^)\/\//,"")]=e,i}const k=new n.C("CognitoIdentityIdProvider");async function f(e,t){const i=t?.identityPoolId,s=(0,u.C)(i),n=(await(0,y.O)({region:s},{IdentityPoolId:i,Logins:e})).IdentityId;if(!n)throw new g.l({name:"GetIdResponseException",message:"Received undefined response from getId operation",recoverySuggestion:"Make sure to pass a valid identityPoolId in the configuration."});return n}const m=new n.C("CognitoCredentialsProvider"),T=3e6;const w=new class{constructor(e){this._nextCredentialsRefresh=0,this._identityIdStore=e}async clearCredentialsAndIdentityId(){m.debug("Clearing out credentials and identityId"),this._credentialsAndIdentityId=void 0,await this._identityIdStore.clearIdentityId()}async clearCredentials(){m.debug("Clearing out in-memory credentials"),this._credentialsAndIdentityId=void 0}async getCredentialsAndIdentityId(e){const t=e.authenticated,{tokens:i}=e,{authConfig:s}=e;try{(0,a.Eh)(s?.Cognito)}catch{return}if(!t&&!s.Cognito.allowGuestAccess)return;const{forceRefresh:n}=e,o=this.hasTokenChanged(i),r=await async function({tokens:e,authConfig:t,identityIdStore:i}){i.setAuthConfig({Cognito:t});let s=await i.loadIdentityId();if(e){if(s&&"primary"===s.type)return s.id;{const i=e.idToken?I(e.idToken.toString()):{},n=await f(i,t);s&&s.id===n&&k.debug(`The guest identity ${s.id} has become the primary identity.`),s={id:n,type:"primary"}}}else{if(s&&"guest"===s.type)return s.id;s={id:await f({},t),type:"guest"}}return i.storeIdentityId(s),s.id}({tokens:i,authConfig:s.Cognito,identityIdStore:this._identityIdStore});return(n||o)&&this.clearCredentials(),t?((0,l.OW)(i),this.credsForOIDCTokens(s.Cognito,i,r)):this.getGuestCredentials(r,s.Cognito)}async getGuestCredentials(e,t){if(this._credentialsAndIdentityId&&!this.isPastTTL()&&!1===this._credentialsAndIdentityId.isAuthenticatedCreds)return m.info("returning stored credentials as they neither past TTL nor expired."),this._credentialsAndIdentityId;this.clearCredentials();const i=(0,u.C)(t.identityPoolId),s=await(0,c.g)({region:i},{IdentityId:e});if(s.Credentials&&s.Credentials.AccessKeyId&&s.Credentials.SecretKey){this._nextCredentialsRefresh=(new Date).getTime()+T;const t={credentials:{accessKeyId:s.Credentials.AccessKeyId,secretAccessKey:s.Credentials.SecretKey,sessionToken:s.Credentials.SessionToken,expiration:s.Credentials.Expiration},identityId:e},i=s.IdentityId;return i&&(t.identityId=i,this._identityIdStore.storeIdentityId({id:i,type:"guest"})),this._credentialsAndIdentityId={...t,isAuthenticatedCreds:!1},t}throw new g.l({name:"CredentialsNotFoundException",message:"Cognito did not respond with either Credentials, AccessKeyId or SecretKey."})}async credsForOIDCTokens(e,t,i){if(this._credentialsAndIdentityId&&!this.isPastTTL()&&!0===this._credentialsAndIdentityId.isAuthenticatedCreds)return m.debug("returning stored credentials as they neither past TTL nor expired."),this._credentialsAndIdentityId;this.clearCredentials();const s=t.idToken?I(t.idToken.toString()):{},n=(0,u.C)(e.identityPoolId),a=await(0,c.g)({region:n},{IdentityId:i,Logins:s});if(a.Credentials&&a.Credentials.AccessKeyId&&a.Credentials.SecretKey){const e={credentials:{accessKeyId:a.Credentials.AccessKeyId,secretAccessKey:a.Credentials.SecretKey,sessionToken:a.Credentials.SessionToken,expiration:a.Credentials.Expiration},identityId:i};this._credentialsAndIdentityId={...e,isAuthenticatedCreds:!0,associatedIdToken:t.idToken?.toString()},this._nextCredentialsRefresh=(new Date).getTime()+T;const s=a.IdentityId;return s&&(e.identityId=s,this._identityIdStore.storeIdentityId({id:s,type:"primary"})),e}throw new g.l({name:"CredentialsException",message:"Cognito did not respond with either Credentials, AccessKeyId or SecretKey."})}isPastTTL(){return void 0===this._nextCredentialsRefresh||this._nextCredentialsRefresh<=Date.now()}hasTokenChanged(e){return!!e&&!!this._credentialsAndIdentityId?.associatedIdToken&&e.idToken?.toString()!==this._credentialsAndIdentityId.associatedIdToken}}(new class{setAuthConfig(e){(0,a.Eh)(e.Cognito),this.authConfig=e,this._authKeys=h("Cognito",e.Cognito.identityPoolId)}constructor(e){this._authKeys={},this._hasGuestIdentityId=!1,this.keyValueStorage=e}async loadIdentityId(){(0,a.Eh)(this.authConfig?.Cognito);try{if(this._primaryIdentityId)return{id:this._primaryIdentityId,type:"primary"};{const e=await this.keyValueStorage.getItem(this._authKeys.identityId);return e?(this._hasGuestIdentityId=!0,{id:e,type:"guest"}):null}}catch(e){return d.log("Error getting stored IdentityId.",e),null}}async storeIdentityId(e){(0,a.Eh)(this.authConfig?.Cognito),"guest"===e.type?(this.keyValueStorage.setItem(this._authKeys.identityId,e.id),this._primaryIdentityId=void 0,this._hasGuestIdentityId=!0):(this._primaryIdentityId=e.id,this._hasGuestIdentityId&&(this.keyValueStorage.removeItem(this._authKeys.identityId),this._hasGuestIdentityId=!1))}async clearIdentityId(){this._primaryIdentityId=void 0,await this.keyValueStorage.removeItem(this._authKeys.identityId)}}(s.ZL))},73696:(e,t,i)=>{i.d(t,{o:()=>a});var s=i(1478),n=i(44780);const a=({endpointOverride:e})=>t=>e?{url:new s.o(e)}:(0,n.o)(t)},34395:(e,t,i)=>{i.d(t,{Uv:()=>c,Qm:()=>u});var s=i(57675),n=i(35781);const a={accessToken:"accessToken",idToken:"idToken",oidcProvider:"oidcProvider",clockDrift:"clockDrift",refreshToken:"refreshToken",deviceKey:"deviceKey",randomPasswordKey:"randomPasswordKey",deviceGroupKey:"deviceGroupKey",signInDetails:"signInDetails",oauthMetadata:"oauthMetadata"};var o,r=i(18594);!function(e){e.InvalidAuthTokens="InvalidAuthTokens"}(o||(o={}));const d={[o.InvalidAuthTokens]:{message:"Invalid tokens.",recoverySuggestion:"Make sure the tokens are valid."}},h=(0,r.p)(d);class c{constructor(){this.name="CognitoIdentityServiceProvider"}getKeyValueStorage(){if(!this.keyValueStorage)throw new n.l({name:"KeyValueStorageNotFoundException",message:"KeyValueStorage was not found in TokenStore"});return this.keyValueStorage}setKeyValueStorage(e){this.keyValueStorage=e}setAuthConfig(e){this.authConfig=e}async loadTokens(){try{const e=await this.getAuthKeys(),t=await this.getKeyValueStorage().getItem(e.accessToken);if(!t)throw new n.l({name:"NoSessionFoundException",message:"Auth session was not found. Make sure to call signIn."});const i=(0,s.Cq)(t),a=await this.getKeyValueStorage().getItem(e.idToken),o=a?(0,s.Cq)(a):void 0,r=await this.getKeyValueStorage().getItem(e.refreshToken)??void 0,d=await this.getKeyValueStorage().getItem(e.clockDrift)??"0",h=Number.parseInt(d),c=await this.getKeyValueStorage().getItem(e.signInDetails),g={accessToken:i,idToken:o,refreshToken:r,deviceMetadata:await this.getDeviceMetadata()??void 0,clockDrift:h,username:await this.getLastAuthUser()};return c&&(g.signInDetails=JSON.parse(c)),g}catch(e){return null}}async storeTokens(e){h(void 0!==e,o.InvalidAuthTokens);const t=e.username;await this.getKeyValueStorage().setItem(this.getLastAuthUserKey(),t);const i=await this.getAuthKeys();await this.getKeyValueStorage().setItem(i.accessToken,e.accessToken.toString()),e.idToken?await this.getKeyValueStorage().setItem(i.idToken,e.idToken.toString()):await this.getKeyValueStorage().removeItem(i.idToken),e.refreshToken?await this.getKeyValueStorage().setItem(i.refreshToken,e.refreshToken):await this.getKeyValueStorage().removeItem(i.refreshToken),e.deviceMetadata&&(e.deviceMetadata.deviceKey&&await this.getKeyValueStorage().setItem(i.deviceKey,e.deviceMetadata.deviceKey),e.deviceMetadata.deviceGroupKey&&await this.getKeyValueStorage().setItem(i.deviceGroupKey,e.deviceMetadata.deviceGroupKey),await this.getKeyValueStorage().setItem(i.randomPasswordKey,e.deviceMetadata.randomPassword)),e.signInDetails?await this.getKeyValueStorage().setItem(i.signInDetails,JSON.stringify(e.signInDetails)):await this.getKeyValueStorage().removeItem(i.signInDetails),await this.getKeyValueStorage().setItem(i.clockDrift,`${e.clockDrift}`)}async clearTokens(){const e=await this.getAuthKeys();await Promise.all([this.getKeyValueStorage().removeItem(e.accessToken),this.getKeyValueStorage().removeItem(e.idToken),this.getKeyValueStorage().removeItem(e.clockDrift),this.getKeyValueStorage().removeItem(e.refreshToken),this.getKeyValueStorage().removeItem(e.signInDetails),this.getKeyValueStorage().removeItem(this.getLastAuthUserKey()),this.getKeyValueStorage().removeItem(e.oauthMetadata)])}async getDeviceMetadata(e){const t=await this.getAuthKeys(e),i=await this.getKeyValueStorage().getItem(t.deviceKey),s=await this.getKeyValueStorage().getItem(t.deviceGroupKey),n=await this.getKeyValueStorage().getItem(t.randomPasswordKey);return n&&s&&i?{deviceKey:i,deviceGroupKey:s,randomPassword:n}:null}async clearDeviceMetadata(e){const t=await this.getAuthKeys(e);await Promise.all([this.getKeyValueStorage().removeItem(t.deviceKey),this.getKeyValueStorage().removeItem(t.deviceGroupKey),this.getKeyValueStorage().removeItem(t.randomPasswordKey)])}async getAuthKeys(e){(0,s.$y)(this.authConfig?.Cognito);const t=e??await this.getLastAuthUser();return g(this.name,`${this.authConfig.Cognito.userPoolClientId}.${t}`)}getLastAuthUserKey(){(0,s.$y)(this.authConfig?.Cognito);const e=this.authConfig.Cognito.userPoolClientId;return`${this.name}.${e}.LastAuthUser`}async getLastAuthUser(){return await this.getKeyValueStorage().getItem(this.getLastAuthUserKey())??"username"}async setOAuthMetadata(e){const{oauthMetadata:t}=await this.getAuthKeys();await this.getKeyValueStorage().setItem(t,JSON.stringify(e))}async getOAuthMetadata(){const{oauthMetadata:e}=await this.getAuthKeys(),t=await this.getKeyValueStorage().getItem(e);return t&&JSON.parse(t)}}const g=(e,t)=>u(a)(`${e}`,t);function u(e){const t=Object.values({...e});return(e,i)=>t.reduce(((t,s)=>({...t,[s]:`${e}.${i}.${s}`})),{})}},91401:(e,t,i)=>{i.d(t,{i:()=>o});var s=i(57675),n=i(16736),a=i(36021);async function o(e){if(!e.AccessToken)throw new n.x({message:"Invalid tokens",name:"InvalidTokens",recoverySuggestion:"Check Cognito UserPool settings"});{const t=(0,s.Cq)(e.AccessToken),i=1e3*(t.payload.iat||0),n=(new Date).getTime(),o=i>0?i-n:0;let r,d,h;e.RefreshToken&&(d=e.RefreshToken),e.IdToken&&(r=(0,s.Cq)(e.IdToken)),e?.NewDeviceMetadata&&(h=e.NewDeviceMetadata);const c={accessToken:t,idToken:r,refreshToken:d,clockDrift:o,deviceMetadata:h,username:e.username};e?.signInDetails&&(c.signInDetails=e.signInDetails),await a.o.setTokens({tokens:c})}}},36021:(e,t,i)=>{i.d(t,{Q:()=>k,o:()=>f});var s=i(10612),n=i(44815),a=i(34395),o=i(26886),r=i(48104),d=i(57675),h=i(71142),c=i(87525),g=i(20434),u=i(35781),l=i(19102),y=i(2864);class I{constructor(){this.waitForInflightOAuth=(0,r.B)()?async()=>{if(await l.f.loadOAuthInFlight())return this.inflightPromise||(this.inflightPromise=new Promise(((e,t)=>{(0,y.I)(e)}))),this.inflightPromise}:async()=>{}}setAuthConfig(e){l.f.setAuthConfig(e.Cognito),this.authConfig=e}setTokenRefresher(e){this.tokenRefresher=e}setAuthTokenStore(e){this.tokenStore=e}getTokenStore(){if(!this.tokenStore)throw new u.l({name:"EmptyTokenStoreException",message:"TokenStore not set"});return this.tokenStore}getTokenRefresher(){if(!this.tokenRefresher)throw new u.l({name:"EmptyTokenRefresherException",message:"TokenRefresher not set"});return this.tokenRefresher}async getTokens(e){let t;try{(0,d.$y)(this.authConfig?.Cognito)}catch(e){return null}await this.waitForInflightOAuth(),this.inflightPromise=void 0,t=await this.getTokenStore().loadTokens();const i=await this.getTokenStore().getLastAuthUser();if(null===t)return null;const s=!!t?.idToken&&(0,h.H)({expiresAt:1e3*(t.idToken?.payload?.exp??0),clockDrift:t.clockDrift??0}),n=(0,h.H)({expiresAt:1e3*(t.accessToken?.payload?.exp??0),clockDrift:t.clockDrift??0});return(e?.forceRefresh||s||n)&&(t=await this.refreshTokens({tokens:t,username:i}),null===t)?null:{accessToken:t?.accessToken,idToken:t?.idToken,signInDetails:t?.signInDetails}}async refreshTokens({tokens:e,username:t}){try{const{signInDetails:i}=e,s=await this.getTokenRefresher()({tokens:e,authConfig:this.authConfig,username:t});return s.signInDetails=i,await this.setTokens({tokens:s}),o.YZ.dispatch("auth",{event:"tokenRefresh"},"Auth",o.U9),s}catch(e){return this.handleErrors(e)}}handleErrors(e){if((0,g.e)(e),e.name!==c.m.NetworkError&&this.clearTokens(),o.YZ.dispatch("auth",{event:"tokenRefresh_failure",data:{error:e}},"Auth",o.U9),e.name.startsWith("NotAuthorizedException"))return null;throw e}async setTokens({tokens:e}){return this.getTokenStore().storeTokens(e)}async clearTokens(){return this.getTokenStore().clearTokens()}getDeviceMetadata(e){return this.getTokenStore().getDeviceMetadata(e)}clearDeviceMetadata(e){return this.getTokenStore().clearDeviceMetadata(e)}setOAuthMetadata(e){return this.getTokenStore().setOAuthMetadata(e)}getOAuthMetadata(){return this.getTokenStore().getOAuthMetadata()}}const k=new class{constructor(){this.authTokenStore=new a.Uv,this.authTokenStore.setKeyValueStorage(s.ZL),this.tokenOrchestrator=new I,this.tokenOrchestrator.setAuthTokenStore(this.authTokenStore),this.tokenOrchestrator.setTokenRefresher(n.s)}getTokens({forceRefresh:e}={forceRefresh:!1}){return this.tokenOrchestrator.getTokens({forceRefresh:e})}setKeyValueStorage(e){this.authTokenStore.setKeyValueStorage(e)}setAuthConfig(e){this.authTokenStore.setAuthConfig(e),this.tokenOrchestrator.setAuthConfig(e)}},{tokenOrchestrator:f}=k}}]);